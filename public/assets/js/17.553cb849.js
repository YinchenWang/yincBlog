(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{423:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"day08-字符串part01"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day08-字符串part01"}},[s._v("#")]),s._v(" day08 字符串part01")]),s._v(" "),n("h3",{attrs:{id:"反转字符串-leetcode-344"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反转字符串-leetcode-344"}},[s._v("#")]),s._v(" 反转字符串 leetcode 344")]),s._v(" "),n("p",[s._v("题目：编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。")]),s._v(" "),n("p",[s._v("不要给另外的数组分配额外的空间，你必须原地修改输入数组、使用 O(1) 的额外空间解决这一问题。")]),s._v(" "),n("p",[s._v("示例 1：")]),s._v(" "),n("p",[s._v('输入：s = ["h","e","l","l","o"]\n输出：["o","l","l","e","h"]')]),s._v(" "),n("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode.cn/problems/reverse-string\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")]),s._v(" "),n("h4",{attrs:{id:"双指针法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双指针法"}},[s._v("#")]),s._v(" 双指针法")]),s._v(" "),n("p",[s._v("很简单，和反转链表一样使用双指针一前一后向中间遍历交换即可。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    void reverseString(vector<char>& s) {\n        for(int i = 0, j = s.size()-1; i < j; i++, j--)\n        {\n            swap(s[i], s[j]);\n        }\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])]),n("h3",{attrs:{id:"反转字符串ii-leetcode-541"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反转字符串ii-leetcode-541"}},[s._v("#")]),s._v(" 反转字符串II leetcode 541")]),s._v(" "),n("p",[s._v("题目：给定一个字符串 s 和一个整数 k，从字符串开头算起，每计数至 2k 个字符，就反转这 2k 字符中的前 k 个字符。")]),s._v(" "),n("p",[s._v("如果剩余字符少于 k 个，则将剩余字符全部反转。\n如果剩余字符小于 2k 但大于或等于 k 个，则反转前 k 个字符，其余字符保持原样。")]),s._v(" "),n("p",[s._v("示例 1：")]),s._v(" "),n("p",[s._v('输入：s = "abcdefg", k = 2\n输出："bacdfeg"')]),s._v(" "),n("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode.cn/problems/reverse-string-ii\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")]),s._v(" "),n("p",[s._v("思路正确，i每次向右移动2k步，同时反转其中前k个字符，当剩余长度不足k时，全部反转。")]),s._v(" "),n("div",{staticClass:"language-c++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    string reverseStr(string s, int k) {\n        for(int i = 0; i < s.size(); i += 2 * k)\n        {\n            if(i + k <= s.size())\n            {\n                reverse(s.begin() + i, s.begin() + i + k );\n            }\n            else\n            {\n                reverse(s.begin() + i, s.end());\n            }\n        }\n        return s;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br")])]),n("h3",{attrs:{id:"替换空格-剑指offer-05"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#替换空格-剑指offer-05"}},[s._v("#")]),s._v(" 替换空格 剑指Offer 05")]),s._v(" "),n("p",[s._v('题目：请实现一个函数，把字符串 s 中的每个空格替换成"%20"。')]),s._v(" "),n("p",[s._v("示例 1：")]),s._v(" "),n("p",[s._v('输入：s = "We are happy."\n输出："We%20are%20happy."')]),s._v(" "),n("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode.cn/problems/ti-huan-kong-ge-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")]),s._v(" "),n("h4",{attrs:{id:"双指针法-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#双指针法-2"}},[s._v("#")]),s._v(" 双指针法")]),s._v(" "),n("p",[s._v("首先统计空格数量，将数组长度扩展为对应长度。从后向前遍历进行替换。")]),s._v(" "),n("p",[s._v("选择从后向前替换是因为如果从前向后时间复杂的为O(n^2),因为每次添加元素都要将添加元素之后的所有元素向后移动")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    string replaceSpace(string s) {\n        int count = 0;\n        int oldSize = s.size();\n        for(int i = 0; i < oldSize; i++)\n        {\n            if(s[i] == ' ') count++;\n        }\n\n        // 扩充字符串s的大小，也就是每个空格替换成\"%20\"之后的大小\n        s.resize(s.size() + count * 2);\n        int sNewSize = s.size();\n        for(int i = sNewSize - 1, j = oldSize - 1; j < i; j--, i--)\n        {\n            if(s[j] != ' ')\n            {\n                s[i] = s[j];\n            }\n            else\n            {\n                s[i] ='0';\n                s[i - 1] = '2';\n                s[i - 2] = '%';\n                i -= 2;\n            }\n        }\n        return s;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("h3",{attrs:{id:"反转字符串中的单词-leetcode-151"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#反转字符串中的单词-leetcode-151"}},[s._v("#")]),s._v(" 反转字符串中的单词 leetcode 151")]),s._v(" "),n("p",[s._v("题目：给你一个字符串 s ，请你反转字符串中 单词 的顺序。")]),s._v(" "),n("p",[s._v("单词 是由非空格字符组成的字符串。s 中使用至少一个空格将字符串中的 单词 分隔开。")]),s._v(" "),n("p",[s._v("返回 单词 顺序颠倒且 单词 之间用单个空格连接的结果字符串。")]),s._v(" "),n("p",[s._v("注意：输入字符串 s中可能会存在前导空格、尾随空格或者单词间的多个空格。返回的结果字符串中，单词间应当仅用单个空格分隔，且不包含任何额外的空格。")]),s._v(" "),n("p",[s._v("示例 1：")]),s._v(" "),n("p",[s._v('输入：s = "the sky is blue"\n输出："blue is sky the"')]),s._v(" "),n("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode.cn/problems/reverse-words-in-a-string\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")]),s._v(" "),n("p",[s._v("思路：")]),s._v(" "),n("p",[s._v("先删除多余空格，再反转整个字符串，最后反转单词。")]),s._v(" "),n("p",[s._v("思路很简单，删除空格时注意使用快慢双指针法！！！！")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    void reverse(string& s, int start, int end){ //翻转，区间写法：左闭右闭 []\n        for (int i = start, j = end; i < j; i++, j--) {\n            swap(s[i], s[j]);\n        }\n    }\n\n    void removeExtraSpaces(string& s) {//去除所有空格并在相邻单词之间添加空格, 快慢指针。\n        int slow = 0;\n        for(int fast = 0; fast < s.size(); fast++)\n        {\n            if(s[fast] != ' ')\n            {\n                if(slow != 0)\n                {\n                    s[slow++] = ' ';    //给非首位的单词前加一个空格。\n                }\n                while(fast < s.size() && s[fast] != ' ')\n                {\n                    s[slow++] = s[fast++];\n                }\n            }\n        }\n        s.resize(slow);\n    }\n\n    string reverseWords(string s) {\n        removeExtraSpaces(s);\n        reverse(s, 0, s.size() - 1);\n        int start = 0;\n        for (int i = 0; i <= s.size(); ++i) {\n            if (i == s.size() || s[i] == ' ') { //到达空格或者串尾，说明一个单词结束。进行翻转。\n                reverse(s, start, i - 1); //翻转，注意是左闭右闭 []的翻转。\n                start = i + 1; //更新下一个单词的开始下标start\n            }\n        }\n        return s;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br"),n("span",{staticClass:"line-number"},[s._v("31")]),n("br"),n("span",{staticClass:"line-number"},[s._v("32")]),n("br"),n("span",{staticClass:"line-number"},[s._v("33")]),n("br"),n("span",{staticClass:"line-number"},[s._v("34")]),n("br"),n("span",{staticClass:"line-number"},[s._v("35")]),n("br"),n("span",{staticClass:"line-number"},[s._v("36")]),n("br"),n("span",{staticClass:"line-number"},[s._v("37")]),n("br"),n("span",{staticClass:"line-number"},[s._v("38")]),n("br"),n("span",{staticClass:"line-number"},[s._v("39")]),n("br"),n("span",{staticClass:"line-number"},[s._v("40")]),n("br")])]),n("h3",{attrs:{id:"左旋转字符串-剑指-offer-58"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#左旋转字符串-剑指-offer-58"}},[s._v("#")]),s._v(" 左旋转字符串 剑指 Offer 58")]),s._v(" "),n("p",[s._v('题目：字符串的左旋转操作是把字符串前面的若干个字符转移到字符串的尾部。请定义一个函数实现字符串左旋转操作的功能。比如，输入字符串"abcdefg"和数字2，该函数将返回左旋转两位得到的结果"cdefgab"。')]),s._v(" "),n("p",[s._v("示例 1：")]),s._v(" "),n("p",[s._v('输入: s = "abcdefg", k = 2\n输出: "cdefgab"')]),s._v(" "),n("p",[s._v("来源：力扣（LeetCode）\n链接：https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。")]),s._v(" "),n("p",[s._v("思路：局部反转+整体反转。挺简单，但是没接触过就没想出来，很有意思。")]),s._v(" "),n("p",[s._v("先反转前k个字符，再反转后面的字符，最后整体反转字符串则可得到左旋转后的字符串。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    string reverseLeftWords(string s, int n) {\n        reverse(s.begin(), s.begin() + n);\n        reverse(s.begin() + n, s.end());\n        reverse(s.begin(), s.end());\n        return s;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br")])])])}),[],!1,null,null,null);n.default=t.exports}}]);