(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{446:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"day34-贪心-part03"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day34-贪心-part03"}},[s._v("#")]),s._v(" Day34 贪心 part03")]),s._v(" "),n("h3",{attrs:{id:"贪心算法理论基础"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#贪心算法理论基础"}},[s._v("#")]),s._v(" 贪心算法理论基础")]),s._v(" "),n("p",[s._v("贪心的本质是选择每一阶段的局部最优，从而达到全局最优。")]),s._v(" "),n("p",[n("strong",[s._v("贪心的使用：")])]),s._v(" "),n("p",[s._v("贪心没有固定的套路，验证能不能使用贪心最好的策略是举反例，"),n("strong",[s._v("刷题或者面试的时候，手动模拟一下感觉可以局部最优推出整体最优，而且想不到反例，那么就试一试贪心")])]),s._v(" "),n("p",[n("strong",[s._v("贪心的一般解题步骤：")])]),s._v(" "),n("ul",[n("li",[s._v("将问题分解为若干个子问题。")]),s._v(" "),n("li",[s._v("找出合适的贪心策略。")]),s._v(" "),n("li",[s._v("求解每一个子问题的最优解。")]),s._v(" "),n("li",[s._v("将局部最优解堆叠成全局最优解。")])]),s._v(" "),n("h3",{attrs:{id:"k次取反后最大化的数组和-leetcode-1005"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#k次取反后最大化的数组和-leetcode-1005"}},[s._v("#")]),s._v(" K次取反后最大化的数组和 leetcode 1005")]),s._v(" "),n("p",[s._v("题目：给你一个整数数组 "),n("code",[s._v("nums")]),s._v(" 和一个整数 "),n("code",[s._v("k")]),s._v(" ，按以下方法修改该数组：")]),s._v(" "),n("ul",[n("li",[s._v("选择某个下标 "),n("code",[s._v("i")]),s._v(" 并将 "),n("code",[s._v("nums[i]")]),s._v(" 替换为 "),n("code",[s._v("-nums[i]")]),s._v(" 。")])]),s._v(" "),n("p",[s._v("重复这个过程恰好 "),n("code",[s._v("k")]),s._v(" 次。可以多次选择同一个下标 "),n("code",[s._v("i")]),s._v(" 。")]),s._v(" "),n("p",[s._v("以这种方式修改数组后，返回数组 "),n("strong",[s._v("可能的最大和")]),s._v(" 。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：nums = [4,2,3], k = 1\n输出：5\n解释：选择下标 1 ，nums 变为 [4,-2,3] 。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("思路： 思路如注释，排序取反求和即可。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    static bool cmp(int a, int b) {\n        return abs(a) > abs(b);\n    }\n    int largestSumAfterKNegations(vector<int>& nums, int k) {\n        sort(nums.begin(), nums.end(), cmp);\t//按绝对值大小从大到小排序\n        for (int i = 0; i < nums.size(); i++) { // 遇见负数取反\n            if (nums[i] < 0 && k > 0) {\n                nums[i] *= -1;\n                k--;\n            }\n        }\n        if (k % 2 == 1) nums[nums.size() - 1] *= -1; // 剩余取最小正数一直取反\n        int result = 0;\n        for (int a : nums) result += a;        // 求和\n        return result;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"加油站-leetcode-134"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#加油站-leetcode-134"}},[s._v("#")]),s._v(" 加油站 leetcode 134")]),s._v(" "),n("p",[s._v("题目：在一条环路上有 "),n("code",[s._v("n")]),s._v(" 个加油站，其中第 "),n("code",[s._v("i")]),s._v(" 个加油站有汽油 "),n("code",[s._v("gas[i]")]),s._v(" 升。")]),s._v(" "),n("p",[s._v("你有一辆油箱容量无限的的汽车，从第 "),n("code",[s._v("i")]),s._v(" 个加油站开往第 "),n("code",[s._v("i+1")]),s._v(" 个加油站需要消耗汽油 "),n("code",[s._v("cost[i]")]),s._v(" 升。你从其中的一个加油站出发，开始时油箱为空。")]),s._v(" "),n("p",[s._v("给定两个整数数组 "),n("code",[s._v("gas")]),s._v(" 和 "),n("code",[s._v("cost")]),s._v(" ，如果你可以按顺序绕环路行驶一周，则返回出发时加油站的编号，否则返回 "),n("code",[s._v("-1")]),s._v(" 。如果存在解，则 "),n("strong",[s._v("保证")]),s._v(" 它是 "),n("strong",[s._v("唯一")]),s._v(" 的。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入: gas = [1,2,3,4,5], cost = [3,4,5,1,2]\n输出: 3\n解释:\n从 3 号加油站(索引为 3 处)出发，可获得 4 升汽油。此时油箱有 = 0 + 4 = 4 升汽油\n开往 4 号加油站，此时油箱有 4 - 1 + 5 = 8 升汽油\n开往 0 号加油站，此时油箱有 8 - 2 + 1 = 7 升汽油\n开往 1 号加油站，此时油箱有 7 - 3 + 2 = 6 升汽油\n开往 2 号加油站，此时油箱有 6 - 4 + 3 = 5 升汽油\n开往 3 号加油站，你需要消耗 5 升汽油，正好足够你返回到 3 号加油站。\n因此，3 可为起始索引。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("思路：totalSum的用法很妙！计算每个加油站的净剩油耗，如果某个加油站前面的净剩油耗和无法满足当前加油站的净剩油耗，则该加油站无法到达，从下一个加油站重新计算。遍历完成后弱totalSum < 0 则代表无法走通。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int canCompleteCircuit(vector<int>& gas, vector<int>& cost) {\n        int curSum = 0;\n        int totalSum = 0;\n        int start = 0;\n        for(int i = 0; i < gas.size(); ++i)\n        {\n            curSum += gas[i] - cost[i];\n            totalSum += gas[i] - cost[i];\n            if(curSum < 0)\n            {\n                curSum = 0;\n                start = i + 1;\n            }\n        }\n        if (totalSum < 0)   return -1;\n        return start;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br")])]),n("h3",{attrs:{id:"分发糖果-leetcode-135"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#分发糖果-leetcode-135"}},[s._v("#")]),s._v(" 分发糖果 leetcode 135")]),s._v(" "),n("p",[s._v("题目："),n("code",[s._v("n")]),s._v(" 个孩子站成一排。给你一个整数数组 "),n("code",[s._v("ratings")]),s._v(" 表示每个孩子的评分。")]),s._v(" "),n("p",[s._v("你需要按照以下要求，给这些孩子分发糖果：")]),s._v(" "),n("ul",[n("li",[s._v("每个孩子至少分配到 "),n("code",[s._v("1")]),s._v(" 个糖果。")]),s._v(" "),n("li",[s._v("相邻两个孩子评分更高的孩子会获得更多的糖果。")])]),s._v(" "),n("p",[s._v("请你给每个孩子分发糖果，计算并返回需要准备的 "),n("strong",[s._v("最少糖果数目")]),s._v(" 。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：ratings = [1,0,2]\n输出：5\n解释：你可以分别给第一个、第二个、第三个孩子分发 2、1、2 颗糖果。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("思路：不要同时判断左右是否符合条件，先左后右，最后选择满足左右最大的糖果数。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int candy(vector<int>& ratings) {\n        vector<int> nums(ratings.size(), 1);\n        for(int i = 1; i < ratings.size(); ++i)\n        {\n            if (ratings[i] > ratings[i- 1 ])  nums[i] = nums[i - 1] + 1;\n        }\n        for (int i = ratings.size() - 2; i >= 0; i--) {\n            if (ratings[i] > ratings[i + 1] ) {\n                nums[i] = max(nums[i], nums[i + 1] + 1);\n            }\n        }\n        int res = 0;\n        for(int nb : nums)\n        {\n            res += nb;\n        }\n        return res;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);