(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{458:function(s,i,n){"use strict";n.r(i);var e=n(2),a=Object(e.a)({},(function(){var s=this,i=s._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[i("h1",{attrs:{id:"day50-动态规划part11"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#day50-动态规划part11"}},[s._v("#")]),s._v(" Day50 动态规划part11")]),s._v(" "),i("h3",{attrs:{id:"动态规划理论基础"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#动态规划理论基础"}},[s._v("#")]),s._v(" 动态规划理论基础")]),s._v(" "),i("p",[i("strong",[s._v("背包问题：")])]),s._v(" "),i("p",[i("img",{attrs:{src:"https://code-thinking-1253855093.file.myqcloud.com/pics/20210117171307407.png",alt:""}})]),s._v(" "),i("p",[i("strong",[s._v("多重背包：")])]),s._v(" "),i("p",[s._v("展开成为01背包")]),s._v(" "),i("h3",{attrs:{id:"买卖股票的最佳时机iii-leetcode-123"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#买卖股票的最佳时机iii-leetcode-123"}},[s._v("#")]),s._v(" 买卖股票的最佳时机III leetcode 123")]),s._v(" "),i("p",[s._v("题目：给定一个数组，它的第 "),i("code",[s._v("i")]),s._v(" 个元素是一支给定的股票在第 "),i("code",[s._v("i")]),s._v(" 天的价格。")]),s._v(" "),i("p",[s._v("设计一个算法来计算你所能获取的最大利润。你最多可以完成 "),i("strong",[s._v("两笔")]),s._v(" 交易。")]),s._v(" "),i("p",[s._v("**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。")]),s._v(" "),i("p",[i("strong",[s._v("示例 1:")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [3,3,5,0,0,3,1,4]\n输出：6\n解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。\n     随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br")])]),i("p",[i("strong",[s._v("示例 2：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [1,2,3,4,5]\n输出：4\n解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。   \n     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。   \n     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br")])]),i("p",[i("strong",[s._v("示例 3：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [7,6,4,3,1] \n输出：0 \n解释：在这个情况下, 没有交易完成, 所以最大利润为 0。\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br")])]),i("p",[i("strong",[s._v("示例 4：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [1]\n输出：0 \n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br")])]),i("p",[i("strong",[s._v("提示：")])]),s._v(" "),i("ul",[i("li",[i("code",[s._v("1 <= prices.length <= 105")])]),s._v(" "),i("li",[i("code",[s._v("0 <= prices[i] <= 105")])])]),s._v(" "),i("p",[s._v("思路：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("确定DP数组以及下标含义：可以买入卖出至多两次的股票，所以在第i天中拥有以下情况：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("dp[i] [0]\t无操作")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [1]\t第一次持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [2]\t第一次不持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [3]\t第二次持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [4]\t第二次不持有股票")])])]),s._v(" "),i("p",[s._v("因此dp[i] [j]代表的是在第i天中状态j所拥有的最大金额")])]),s._v(" "),i("li",[i("p",[s._v("确定递推公式：对于i来说")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("dp[i] [1]: dp[i] [1] = max(dp[i - 1] [0] - prices[i], dp[i -1] [1])")]),s._v(" "),i("ul",[i("li",[s._v("买入股票：dp[i] [1] = dp[i - 1] [0] - prices[i]")]),s._v(" "),i("li",[s._v("无操作：dp[i] [1] = dp[i -1] [1]")])])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [2]: dp[i] [2] = max(dp[i - 1] [1] + prices[i], dp[i -1] [2])")]),s._v(" "),i("ul",[i("li",[s._v("卖出股票：dp[i] [2] = dp[i - 1] [1] + prices[i]")]),s._v(" "),i("li",[s._v("无操作：dp[i] [2] = dp[i -1] [2]")])])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [3]: dp[i] [3] = max(dp[i - 1] [2] - prices[i], dp[i -1] [3])")]),s._v(" "),i("ul",[i("li",[s._v("买入股票：dp[i] [3] = dp[i - 1] [2] - prices[i]")]),s._v(" "),i("li",[s._v("无操作：dp[i] [3] = dp[i -1] [3]")])])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [4]: dp[i] [4] = max(dp[i - 1] [3] + prices[i], dp[i -1] [3])")]),s._v(" "),i("ul",[i("li",[s._v("卖出股票：dp[i] [4] = dp[i - 1] [3] + prices[i]")]),s._v(" "),i("li",[s._v("无操作：dp[i] [4] = dp[i -1] [4]")])])])])]),s._v(" "),i("li",[i("p",[s._v("DP数组初始化:   dp[0] [1] = -prices[0] ,     dp[0] [3] = -prices[0]")])]),s._v(" "),i("li",[i("p",[s._v("确定遍历顺序:    从前往后")])]),s._v(" "),i("li",[i("p",[s._v("打印DP数组： 用于debug")])])]),s._v(" "),i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        if (prices.size() == 0) return 0;\n        vector<vector<int>> dp(prices.size(), vector<int>(5, 0));\n\n        dp[0][1] -= prices[0];\n        dp[0][3] -= prices[0];\n\n        for (int i = 1; i < prices.size(); ++i)\n        {\n            dp[i][0] = dp[i - 1][0];\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - prices[i]); //第i天第一次持有股票\n            dp[i][2] = max(dp[i - 1][2], dp[i - 1][1] + prices[i]); //第i天第一次不持有股票\n            dp[i][3] = max(dp[i - 1][3], dp[i - 1][2] - prices[i]); //第i天第二次持有股票\n            dp[i][4] = max(dp[i - 1][4], dp[i - 1][3] + prices[i]); //第i天第二次不持有股票\n        }\n        return dp[prices.size() - 1][4];\n    }\n};\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br"),i("span",{staticClass:"line-number"},[s._v("7")]),i("br"),i("span",{staticClass:"line-number"},[s._v("8")]),i("br"),i("span",{staticClass:"line-number"},[s._v("9")]),i("br"),i("span",{staticClass:"line-number"},[s._v("10")]),i("br"),i("span",{staticClass:"line-number"},[s._v("11")]),i("br"),i("span",{staticClass:"line-number"},[s._v("12")]),i("br"),i("span",{staticClass:"line-number"},[s._v("13")]),i("br"),i("span",{staticClass:"line-number"},[s._v("14")]),i("br"),i("span",{staticClass:"line-number"},[s._v("15")]),i("br"),i("span",{staticClass:"line-number"},[s._v("16")]),i("br"),i("span",{staticClass:"line-number"},[s._v("17")]),i("br"),i("span",{staticClass:"line-number"},[s._v("18")]),i("br"),i("span",{staticClass:"line-number"},[s._v("19")]),i("br"),i("span",{staticClass:"line-number"},[s._v("20")]),i("br")])]),i("h3",{attrs:{id:"买卖股票的最佳时机-iv-leetcode-188"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#买卖股票的最佳时机-iv-leetcode-188"}},[s._v("#")]),s._v(" 买卖股票的最佳时机 IV leetcode 188")]),s._v(" "),i("p",[s._v("题目：给你一个整数数组 "),i("code",[s._v("prices")]),s._v(" 和一个整数 "),i("code",[s._v("k")]),s._v(" ，其中 "),i("code",[s._v("prices[i]")]),s._v(" 是某支给定的股票在第 "),i("code",[s._v("i")]),s._v(" 天的价格。")]),s._v(" "),i("p",[s._v("设计一个算法来计算你所能获取的最大利润。你最多可以完成 "),i("code",[s._v("k")]),s._v(" 笔交易。也就是说，你最多可以买 "),i("code",[s._v("k")]),s._v(" 次，卖 "),i("code",[s._v("k")]),s._v(" 次。")]),s._v(" "),i("p",[s._v("**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。")]),s._v(" "),i("p",[i("strong",[s._v("示例 1：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：k = 2, prices = [2,4,1]\n输出：2\n解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br")])]),i("p",[i("strong",[s._v("示例 2：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：k = 2, prices = [3,2,6,5,0,3]\n输出：7\n解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。\n     随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。 \n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br")])]),i("p",[i("strong",[s._v("提示：")])]),s._v(" "),i("ul",[i("li",[i("code",[s._v("1 <= k <= 100")])]),s._v(" "),i("li",[i("code",[s._v("1 <= prices.length <= 1000")])]),s._v(" "),i("li",[i("code",[s._v("0 <= prices[i] <= 1000")])])]),s._v(" "),i("p",[s._v("思路：与上题不同的时可以买卖k次，找出规律即可")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("确定DP数组以及下标含义：可以买入卖出至多两次的股票，所以在第i天中拥有以下情况：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("dp[i] [0]\t无操作")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [1]\t第一次持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [2]\t第一次不持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [3]\t第二次持有股票")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [4]\t第二次不持有股票")])]),s._v(" "),i("li",[i("p",[s._v("。。。。。。")])])]),s._v(" "),i("p",[s._v("因此dp[i] [j]代表的是在第i天中状态j所拥有的最大金额")])]),s._v(" "),i("li",[i("p",[s._v("确定递推公式：对于i来说")]),s._v(" "),i("ul",[i("li",[i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("  for (int j = 0; j < 2 * k - 1; j += 2) \n  {\n    dp[i][j + 1] = max(dp[i - 1][j + 1], dp[i - 1][j] - prices[i]);\n  \n    dp[i][j + 2] = max(dp[i - 1][j + 2], dp[i - 1][j + 1] + prices[i]);\n  }\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br")])])])])]),s._v(" "),i("li",[i("p",[s._v("DP数组初始化:")]),s._v(" "),i("ul",[i("li",[i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("  for (int i = 1; i < k * 2 ; i += 2)\n          {\n              dp[0][i] -= prices[0];\n          }\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br")])])])])]),s._v(" "),i("li",[i("p",[s._v("确定遍历顺序:    从前往后")])]),s._v(" "),i("li",[i("p",[s._v("打印DP数组： 用于debug")])])]),s._v(" "),i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("class Solution {\npublic:\n    int maxProfit(int k, vector<int>& prices) {\n        if (prices.size() == 0) return 0;\n        vector<vector<int>> dp(prices.size(), vector<int>(k * 2 + 1, 0));\n\n        for (int i = 1; i < k * 2 ; i += 2)\n        {\n            dp[0][i] -= prices[0];\n        }\n        \n\n        for (int i = 1; i < prices.size(); ++i)\n        {\n            for (int j = 0; j < 2 * k - 1; j += 2) {\n                dp[i][j + 1] = max(dp[i - 1][j + 1], dp[i - 1][j] - prices[i]);\n                dp[i][j + 2] = max(dp[i - 1][j + 2], dp[i - 1][j + 1] + prices[i]);\n            }\n        }\n        return dp[prices.size() - 1][2 * k];\n    }\n};\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br"),i("span",{staticClass:"line-number"},[s._v("7")]),i("br"),i("span",{staticClass:"line-number"},[s._v("8")]),i("br"),i("span",{staticClass:"line-number"},[s._v("9")]),i("br"),i("span",{staticClass:"line-number"},[s._v("10")]),i("br"),i("span",{staticClass:"line-number"},[s._v("11")]),i("br"),i("span",{staticClass:"line-number"},[s._v("12")]),i("br"),i("span",{staticClass:"line-number"},[s._v("13")]),i("br"),i("span",{staticClass:"line-number"},[s._v("14")]),i("br"),i("span",{staticClass:"line-number"},[s._v("15")]),i("br"),i("span",{staticClass:"line-number"},[s._v("16")]),i("br"),i("span",{staticClass:"line-number"},[s._v("17")]),i("br"),i("span",{staticClass:"line-number"},[s._v("18")]),i("br"),i("span",{staticClass:"line-number"},[s._v("19")]),i("br"),i("span",{staticClass:"line-number"},[s._v("20")]),i("br"),i("span",{staticClass:"line-number"},[s._v("21")]),i("br"),i("span",{staticClass:"line-number"},[s._v("22")]),i("br")])])])}),[],!1,null,null,null);i.default=a.exports}}]);