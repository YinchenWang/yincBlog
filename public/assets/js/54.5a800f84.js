(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{456:function(s,i,e){"use strict";e.r(i);var a=e(2),n=Object(a.a)({},(function(){var s=this,i=s._self._c;return i("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[i("h1",{attrs:{id:"day51-动态规划part12"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#day51-动态规划part12"}},[s._v("#")]),s._v(" Day51 动态规划part12")]),s._v(" "),i("h3",{attrs:{id:"动态规划理论基础"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#动态规划理论基础"}},[s._v("#")]),s._v(" 动态规划理论基础")]),s._v(" "),i("h3",{attrs:{id:"买卖股票的最佳时机含冷冻期-leetcode-309"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#买卖股票的最佳时机含冷冻期-leetcode-309"}},[s._v("#")]),s._v(" 买卖股票的最佳时机含冷冻期 leetcode 309")]),s._v(" "),i("p",[s._v("题目：给定一个整数数组"),i("code",[s._v("prices")]),s._v("，其中第 "),i("code",[s._v("prices[i]")]),s._v(" 表示第 "),i("code",[s._v("*i*")]),s._v(" 天的股票价格 。")]),s._v(" "),i("p",[s._v("设计一个算法计算出最大利润。在满足以下约束条件下，你可以尽可能地完成更多的交易（多次买卖一支股票）:")]),s._v(" "),i("ul",[i("li",[s._v("卖出股票后，你无法在第二天买入股票 (即冷冻期为 1 天)。")])]),s._v(" "),i("p",[s._v("**注意：**你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。")]),s._v(" "),i("p",[i("strong",[s._v("示例 1:")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入: prices = [1,2,3,0,2]\n输出: 3 \n解释: 对应的交易状态为: [买入, 卖出, 冷冻期, 买入, 卖出]\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br")])]),i("p",[i("strong",[s._v("示例 2:")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入: prices = [1]\n输出: 0\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br")])]),i("p",[i("strong",[s._v("提示：")])]),s._v(" "),i("ul",[i("li",[i("code",[s._v("1 <= prices.length <= 5000")])]),s._v(" "),i("li",[i("code",[s._v("0 <= prices[i] <= 1000")])])]),s._v(" "),i("p",[s._v("思路：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("确定DP数组以及下标含义：可以多次买卖，期间存在冷冻期，所以存在以下情况：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("目前持有股票，计算累计最大收益")])]),s._v(" "),i("li",[i("p",[s._v("目前不持有股票，处于冷冻期")])]),s._v(" "),i("li",[i("p",[s._v("目前不持有股票，不处于冷冻期")])])]),s._v(" "),i("p",[s._v("因此dp[i] [j]代表的是在第i天中状态j所拥有的最大金额")])]),s._v(" "),i("li",[i("p",[s._v("确定递推公式：对于i来说")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("dp[i] [0] = max(dp[i - 1] [0], dp[i - 1] [2] - prices[i]);")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [1] = dp[i - 1] [0] + prices[i];")])]),s._v(" "),i("li",[i("p",[s._v("dp[i] [2] = max(dp[i - 1] [1], dp[i - 1] [2]);")])])])]),s._v(" "),i("li",[i("p",[s._v("DP数组初始化:   dp[0] [0] = -prices[0]")])]),s._v(" "),i("li",[i("p",[s._v("确定遍历顺序:    从前往后")])]),s._v(" "),i("li",[i("p",[s._v("打印DP数组： 用于debug")])])]),s._v(" "),i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("class Solution {\npublic:\n    int maxProfit(vector<int>& prices) {\n        vector<vector<int>> dp(prices.size(), vector(3, 0));\n        dp[0][0] -= prices[0];\n\n        for (int i = 1; i < prices.size(); ++i)\n        {\n            dp[i][0] = max(dp[i - 1][0], dp[i - 1][2] - prices[i]);\n            dp[i][1] = dp[i - 1][0] + prices[i];\n            dp[i][2] = max(dp[i - 1][1], dp[i - 1][2]);\n        }\n        return max(dp[prices.size() - 1][2], dp[prices.size() - 1][1]);\n    }\n};\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br"),i("span",{staticClass:"line-number"},[s._v("7")]),i("br"),i("span",{staticClass:"line-number"},[s._v("8")]),i("br"),i("span",{staticClass:"line-number"},[s._v("9")]),i("br"),i("span",{staticClass:"line-number"},[s._v("10")]),i("br"),i("span",{staticClass:"line-number"},[s._v("11")]),i("br"),i("span",{staticClass:"line-number"},[s._v("12")]),i("br"),i("span",{staticClass:"line-number"},[s._v("13")]),i("br"),i("span",{staticClass:"line-number"},[s._v("14")]),i("br"),i("span",{staticClass:"line-number"},[s._v("15")]),i("br")])]),i("h3",{attrs:{id:"买卖股票的最佳时机含手续费-leetcode-714"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#买卖股票的最佳时机含手续费-leetcode-714"}},[s._v("#")]),s._v(" 买卖股票的最佳时机含手续费 leetcode 714")]),s._v(" "),i("p",[s._v("题目：给定一个整数数组 "),i("code",[s._v("prices")]),s._v("，其中 "),i("code",[s._v("prices[i]")]),s._v("表示第 "),i("code",[s._v("i")]),s._v(" 天的股票价格 ；整数 "),i("code",[s._v("fee")]),s._v(" 代表了交易股票的手续费用。")]),s._v(" "),i("p",[s._v("你可以无限次地完成交易，但是你每笔交易都需要付手续费。如果你已经购买了一个股票，在卖出它之前你就不能再继续购买股票了。")]),s._v(" "),i("p",[s._v("返回获得利润的最大值。")]),s._v(" "),i("p",[s._v("**注意：**这里的一笔交易指买入持有并卖出股票的整个过程，每笔交易你只需要为支付一次手续费。")]),s._v(" "),i("p",[i("strong",[s._v("示例 1：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [1, 3, 2, 8, 4, 9], fee = 2\n输出：8\n解释：能够达到的最大利润:  \n在此处买入 prices[0] = 1\n在此处卖出 prices[3] = 8\n在此处买入 prices[4] = 4\n在此处卖出 prices[5] = 9\n总利润: ((8 - 1) - 2) + ((9 - 4) - 2) = 8\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br"),i("span",{staticClass:"line-number"},[s._v("7")]),i("br"),i("span",{staticClass:"line-number"},[s._v("8")]),i("br")])]),i("p",[i("strong",[s._v("示例 2：")])]),s._v(" "),i("div",{staticClass:"language- line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("输入：prices = [1,3,7,5,10,3], fee = 3\n输出：6\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br")])]),i("p",[i("strong",[s._v("提示：")])]),s._v(" "),i("ul",[i("li",[i("code",[s._v("1 <= prices.length <= 5 * 104")])]),s._v(" "),i("li",[i("code",[s._v("1 <= prices[i] < 5 * 104")])]),s._v(" "),i("li",[i("code",[s._v("0 <= fee < 5 * 104")])])]),s._v(" "),i("p",[s._v("思路：与上题不同的时可以买卖k次，找出规律即可")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("确定DP数组以及下标含义：可以买入卖出至多两次的股票，所以在第i天中拥有以下情况：")]),s._v(" "),i("ul",[i("li",[i("p",[s._v("持有股票")]),s._v(" "),i("ul",[i("li",[s._v("第i -1 天就持有股票，保持现状 ：dp[i - 1] [0]")]),s._v(" "),i("li",[s._v("第i天买入股票，减去价格：dp[i -1] [1] - prices[i]")])])]),s._v(" "),i("li",[i("p",[s._v("不持有股票：")]),s._v(" "),i("ul",[i("li",[s._v("卖出股票：dp[i-1] [0] + prices[i] - fee")]),s._v(" "),i("li",[s._v("第i - 1天就不持有股票,保持现状 dp[i - 1] [1]")])])])]),s._v(" "),i("p",[s._v("因此dp[i] [j]代表的是在第i天中状态j所拥有的最大金额")])]),s._v(" "),i("li",[i("p",[s._v("确定递推公式：对于i来说")]),s._v(" "),i("ul",[i("li",[s._v("dp[i] [0] = max (dp[i - 1] [0], dp[i -1] [1] - prices[i] )")]),s._v(" "),i("li",[s._v("dp[i] [1] = max (dp[i - 1] [1], dp[i-1] [0] + prices[i] - fee)")])])]),s._v(" "),i("li",[i("p",[s._v("DP数组初始化:")])]),s._v(" "),i("li",[i("p",[s._v("确定遍历顺序:    从前往后")])]),s._v(" "),i("li",[i("p",[s._v("打印DP数组： 用于debug")])])]),s._v(" "),i("div",{staticClass:"language-C++ line-numbers-mode"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[s._v("class Solution {\npublic:\n    int maxProfit(vector<int>& prices, int fee) {\n        vector<vector<int>> dp(prices.size(), vector<int>(2, 0));\n        dp[0][0] -= prices[0];\n\n        for (int i = 1; i < prices.size(); ++i)\n        {\n            dp[i][0] = max(dp[i - 1][0], dp[i - 1][1] - prices[i]);\n            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] + prices[i] - fee);\n        }\n        return max(dp[prices.size() - 1][1], dp[prices.size() - 1][0]);\n    }\n};\n")])]),s._v(" "),i("div",{staticClass:"line-numbers-wrapper"},[i("span",{staticClass:"line-number"},[s._v("1")]),i("br"),i("span",{staticClass:"line-number"},[s._v("2")]),i("br"),i("span",{staticClass:"line-number"},[s._v("3")]),i("br"),i("span",{staticClass:"line-number"},[s._v("4")]),i("br"),i("span",{staticClass:"line-number"},[s._v("5")]),i("br"),i("span",{staticClass:"line-number"},[s._v("6")]),i("br"),i("span",{staticClass:"line-number"},[s._v("7")]),i("br"),i("span",{staticClass:"line-number"},[s._v("8")]),i("br"),i("span",{staticClass:"line-number"},[s._v("9")]),i("br"),i("span",{staticClass:"line-number"},[s._v("10")]),i("br"),i("span",{staticClass:"line-number"},[s._v("11")]),i("br"),i("span",{staticClass:"line-number"},[s._v("12")]),i("br"),i("span",{staticClass:"line-number"},[s._v("13")]),i("br"),i("span",{staticClass:"line-number"},[s._v("14")]),i("br")])])])}),[],!1,null,null,null);i.default=n.exports}}]);