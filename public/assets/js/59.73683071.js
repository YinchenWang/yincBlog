(window.webpackJsonp=window.webpackJsonp||[]).push([[59],{463:function(s,n,a){"use strict";a.r(n);var e=a(2),i=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"day57-动态规划part17"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day57-动态规划part17"}},[s._v("#")]),s._v(" Day57 动态规划part17")]),s._v(" "),n("h3",{attrs:{id:"回文子串-leetcode-647"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#回文子串-leetcode-647"}},[s._v("#")]),s._v(" 回文子串 leetcode 647")]),s._v(" "),n("p",[s._v("题目：给你一个字符串 "),n("code",[s._v("s")]),s._v(" ，请你统计并返回这个字符串中 "),n("strong",[s._v("回文子串")]),s._v(" 的数目。")]),s._v(" "),n("p",[n("strong",[s._v("回文字符串")]),s._v(" 是正着读和倒过来读一样的字符串。")]),s._v(" "),n("p",[n("strong",[s._v("子字符串")]),s._v(" 是字符串中的由连续字符组成的一个序列。")]),s._v(" "),n("p",[s._v("具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('输入：s = "abc"\n输出：3\n解释：三个回文子串: "a", "b", "c"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("示例 2：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('输入：s = "aaa"\n输出：6\n解释：6个回文子串: "a", "a", "a", "aa", "aa", "aaa"\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("1 <= s.length <= 1000")])]),s._v(" "),n("li",[n("code",[s._v("s")]),s._v(" 由小写英文字母组成")])]),s._v(" "),n("p",[s._v("思路1：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("确定DP数组以及下标含义: dp[i] [j] ，[i , j]的子串是否是回文的 true / false")])]),s._v(" "),n("li",[n("p",[s._v("确定递推公式：")])]),s._v(" "),n("li",[n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  if(s[i] == s[j])   \n  {\n    if (j - i <= 1)\n    {\n      dp[i][j] = true;\n      result++;\n    }\n    else if (dp[i + 1][j - 1] == true)\n    {\n      dp[i][j] = true;\n      result++;\n    }\n  }\n    \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("DP数组初始化:   dp[i] [j] = false")])]),s._v(" "),n("li",[n("p",[s._v("确定遍历顺序:    "),n("strong",[s._v("从下到上，从左到右遍历，这样保证dp[i + 1][j - 1]都是经过计算的")]),s._v("。")])]),s._v(" "),n("li",[n("p",[s._v("打印DP数组： 用于debug")])]),s._v(" "),n("li",[n("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://code-thinking-1253855093.file.myqcloud.com/pics/20210121171059951-20230310132153163.jpg"}})])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int countSubstrings(string s) {\n        vector<vector<bool>> dp(s.size(), vector<bool>(s.size(), false));\n        int result = 0;\n\n        for (int i = s.size() - 1; i >= 0; --i)\n        {\n            for (int j = i; j < s.size(); ++j)\n            {\n                if(s[i] == s[j])   \n                {\n                    if (j - i <= 1)\n                    {\n                        dp[i][j] = true;\n                        result++;\n                    }\n                    else if (dp[i + 1][j - 1] == true)\n                    {     \n                        dp[i][j] = true;\n                        result++;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("p",[s._v("思路2：求出word1与word2的最长公共子序列，然后使用word1 + word2的长度剪去两个最长公共子序列的长度即可！！！")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int minDistance(string word1, string word2) {\n       vector<vector<int>> dp(word1.size()+1, vector<int>(word2.size()+1, 0));\n        for (int i=1; i<=word1.size(); i++){\n            for (int j=1; j<=word2.size(); j++){\n                if (word1[i-1] == word2[j-1]) dp[i][j] = dp[i-1][j-1] + 1;\n                else dp[i][j] = max(dp[i-1][j], dp[i][j-1]);\n            }\n        }\n        return word1.size()+word2.size()-dp[word1.size()][word2.size()]*2;\n    }\n};\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"最长回文子序列-leetcode-516"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#最长回文子序列-leetcode-516"}},[s._v("#")]),s._v(" 最长回文子序列 leetcode 516")]),s._v(" "),n("p",[s._v("题目：给你一个字符串 "),n("code",[s._v("s")]),s._v(" ，找出其中最长的回文子序列，并返回该序列的长度。")]),s._v(" "),n("p",[s._v("子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('输入：s = "bbbab"\n输出：4\n解释：一个可能的最长回文子序列为 "bbbb" 。\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("示例 2：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('输入：s = "cbbd"\n输出：2\n解释：一个可能的最长回文子序列为 "bb" 。\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("1 <= s.length <= 1000")])]),s._v(" "),n("li",[n("code",[s._v("s")]),s._v(" 仅由小写英文字母组成")])]),s._v(" "),n("p",[s._v("思路：")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("确定DP数组以及下标含义: 在[i, j]范围内最长的回文子序列的长度为dp[i] [j]。")])]),s._v(" "),n("li",[n("p",[s._v("确定递推公式：")])]),s._v(" "),n("li",[n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("  if (s[i] == s[j]) {\t//相等长度 +2\n      dp[i][j] = dp[i + 1][j - 1] + 2;\n  } else {\t//不相等取两个子序列中最长的\n      dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);\n  }\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])])]),s._v(" "),n("li",[n("p",[s._v("DP数组初始化:   dp[i] [i] = 1")])]),s._v(" "),n("li",[n("p",[s._v("确定遍历顺序:    从左往右，从上往下")])]),s._v(" "),n("li",[n("p",[s._v("打印DP数组： 用于debug")])]),s._v(" "),n("li",[n("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://code-thinking-1253855093.file.myqcloud.com/pics/20210127151521432.jpg"}})])]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int longestPalindromeSubseq(string s) {\n        vector<vector<int>> dp(s.size(), vector<int>(s.size(), 0));\n\n        for (int i = 0; i < s.size(); ++i) dp[i][i] = 1;\n\n        for (int i = s.size() - 1; i >= 0; i--) {\n            for (int j = i + 1; j < s.size(); j++) {\n                if (s[i] == s[j]) {\n                    dp[i][j] = dp[i + 1][j - 1] + 2;\n                } else {\n                    dp[i][j] = max(dp[i + 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return dp[0][s.size() - 1];\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])])])}),[],!1,null,null,null);n.default=i.exports}}]);