(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{472:function(s,n,t){"use strict";t.r(n);var a=t(2),e=Object(a.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"day59-单调栈-part2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#day59-单调栈-part2"}},[s._v("#")]),s._v(" Day59 单调栈 part2")]),s._v(" "),n("h3",{attrs:{id:"下一个更大元素ii-leetcode-503"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#下一个更大元素ii-leetcode-503"}},[s._v("#")]),s._v(" 下一个更大元素II leetcode 503")]),s._v(" "),n("p",[s._v("题目：给定一个循环数组 "),n("code",[s._v("nums")]),s._v(" （ "),n("code",[s._v("nums[nums.length - 1]")]),s._v(" 的下一个元素是 "),n("code",[s._v("nums[0]")]),s._v(" ），返回 "),n("em",[n("code",[s._v("nums")]),s._v(" 中每个元素的 "),n("strong",[s._v("下一个更大元素")])]),s._v(" 。")]),s._v(" "),n("p",[s._v("数字 "),n("code",[s._v("x")]),s._v(" 的 "),n("strong",[s._v("下一个更大的元素")]),s._v(" 是按数组遍历顺序，这个数字之后的第一个比它更大的数，这意味着你应该循环地搜索它的下一个更大的数。如果不存在，则输出 "),n("code",[s._v("-1")]),s._v(" 。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入: nums = [1,2,1]\n输出: [2,-1,2]\n解释: 第一个 1 的下一个更大的数是 2；\n数字 2 找不到下一个更大的数； \n第二个 1 的下一个最大的数需要循环搜索，结果也是 2。\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[n("strong",[s._v("示例 2:")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入: nums = [1,2,3,4,3]\n输出: [2,3,4,-1,4]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("提示:")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("1 <= nums.length <= 104")])]),s._v(" "),n("li",[n("code",[s._v("-109 <= nums[i] <= 109")])])]),s._v(" "),n("p",[s._v("思路：第一反应就是拼接数组，秒了。不过不开数组取模的方法很棒")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    vector<int> nextGreaterElements(vector<int>& nums) {\n        vector<int> result(nums.size(), -1);\n        if (nums.size() == 0) return result;\n        stack<int> st;\n        st.push(0);\n        \n        for (int i = 1; i < nums.size() * 2; i++) { \n            // 用i % nums.size()取模操作来模拟首尾相连\n            while (!st.empty() && nums[i % nums.size()] > nums[st.top()]) {\n                    result[st.top()] = nums[i % nums.size()];\n                    st.pop();\n                }\n                st.push(i % nums.size());\n        }\n        return result;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("h3",{attrs:{id:"接雨水-leetcode-42"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#接雨水-leetcode-42"}},[s._v("#")]),s._v(" 接雨水 leetcode 42")]),s._v(" "),n("p",[s._v("题目：给定 "),n("code",[s._v("n")]),s._v(" 个非负整数表示每个宽度为 "),n("code",[s._v("1")]),s._v(" 的柱子的高度图，计算按此排列的柱子，下雨之后能接多少雨水。")]),s._v(" "),n("p",[n("strong",[s._v("示例 1：")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/10/22/rainwatertrap.png",alt:"img"}})]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：height = [0,1,0,2,1,0,1,3,2,1,2,1]\n输出：6\n解释：上面是由数组 [0,1,0,2,1,0,1,3,2,1,2,1] 表示的高度图，在这种情况下，可以接 6 个单位的雨水（蓝色部分表示雨水）。 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("strong",[s._v("示例 2：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("输入：height = [4,2,0,3,2,5]\n输出：9 \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[n("strong",[s._v("提示：")])]),s._v(" "),n("ul",[n("li",[n("code",[s._v("n == height.length")])]),s._v(" "),n("li",[n("code",[s._v("1 <= n <= 2 * 104")])]),s._v(" "),n("li",[n("code",[s._v("0 <= height[i] <= 105")])])]),s._v(" "),n("p",[s._v("思路1：单调栈，横向的求解，一层层求解雨水量。")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int trap(vector<int>& height) {\n        if (height.size() <= 2) return 0; \n        stack<int> st; // 存着下标，计算的时候用下标对应的柱子高度\n        st.push(0);\n        int sum = 0;\n        for (int i = 1; i < height.size(); i++) {\n            if (height[i] < height[st.top()]) {     // 情况一,比左边柱子矮\n                st.push(i);\n            } if (height[i] == height[st.top()]) {  // 情况二，和左边柱子一样高\n                st.pop(); // 弹出再加入和不弹出直接加入效果是一样的，但处理思路不同。\n                st.push(i);\n            } else {                                // 情况三比左边柱子高，开始计算雨水量\n                while (!st.empty() && height[i] > height[st.top()]) { \n                    int mid = st.top();\n                    st.pop();\n                    if (!st.empty()) {\n                        int h = min(height[st.top()], height[i]) - height[mid];\n                        int w = i - st.top() - 1; // 注意减一，只求中间宽度\n                        sum += h * w;\n                    }\n                }\n                st.push(i);\n            }\n        }\n        return sum;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[s._v("思路2: 双指针, 记录柱子左右两边的最大高度然后求和，")]),s._v(" "),n("div",{staticClass:"language-C++ line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("class Solution {\npublic:\n    int trap(vector<int>& height) {\n        if (height.size() <= 2) return 0;\n        vector<int> maxLeft(height.size(), 0);\n        vector<int> maxRight(height.size(), 0);\n        int size = maxRight.size();\n\n        // 记录每个柱子左边柱子最大高度\n        maxLeft[0] = height[0];\n        for (int i = 1; i < size; i++) {\n            maxLeft[i] = max(height[i], maxLeft[i - 1]);\n        }\n        // 记录每个柱子右边柱子最大高度\n        maxRight[size - 1] = height[size - 1];\n        for (int i = size - 2; i >= 0; i--) {\n            maxRight[i] = max(height[i], maxRight[i + 1]);\n        }\n        // 求和\n        int sum = 0;\n        for (int i = 0; i < size; i++) {\n            int count = min(maxLeft[i], maxRight[i]) - height[i];\n            if (count > 0) sum += count;\n        }\n        return sum;\n    }\n};\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br")])])])}),[],!1,null,null,null);n.default=e.exports}}]);